<h1>Results</h1>

When you run the program with the given parameters on four processes in
debug mode, your terminal output should look like this:
@code
Running with Trilinos on 4 MPI rank(s)...
Calculating transformation matrices...
Cycle 0:
   Number of active cells:       3072
     by partition:               768 768 768 768
   Number of degrees of freedom: 12545
     by partition:               3201 3104 3136 3104
   Frequencies of poly. degrees: 2:3072
   Solved in 5 iterations.


+---------------------------------------------+------------+------------+
| Total wallclock time elapsed since start    |      6.34s |            |
|                                             |            |            |
| Section                         | no. calls |  wall time | % of total |
+---------------------------------+-----------+------------+------------+
| calculate transformation        |         1 |     0.679s |        11% |
| compute indicators              |         1 |     0.404s |       6.4% |
| initialize grid                 |         1 |      0.35s |       5.5% |
| output results                  |         1 |     0.182s |       2.9% |
| setup system                    |         1 |     0.521s |       8.2% |
| solve system                    |         1 |      4.16s |        66% |
+---------------------------------+-----------+------------+------------+


Cycle 1:
   Number of active cells:       3351
     by partition:               875 761 843 872
   Number of degrees of freedom: 18228
     by partition:               4535 4735 4543 4415
   Frequencies of poly. degrees: 2:2522 3:829
   Solved in 5 iterations.


+---------------------------------------------+------------+------------+
| Total wallclock time elapsed since start    |      9.64s |            |
|                                             |            |            |
| Section                         | no. calls |  wall time | % of total |
+---------------------------------+-----------+------------+------------+
| adapt resolution                |         1 |     0.918s |       9.5% |
| compute indicators              |         1 |     0.403s |       4.2% |
| output results                  |         1 |     0.103s |       1.1% |
| setup system                    |         1 |      1.19s |        12% |
| solve system                    |         1 |      7.01s |        73% |
+---------------------------------+-----------+------------+------------+


Cycle 2:
   Number of active cells:       3651
     by partition:               958 818 933 942
   Number of degrees of freedom: 26519
     by partition:               6651 6822 6563 6483
   Frequencies of poly. degrees: 2:2385 3:758 4:508
   Solved in 6 iterations.
...
@endcode

When running the code with more processors, you will notice slight
differences in the number of active cells and degrees of freedom. This
is due to the fact that solver and preconditioner depend on the
partitioning of the problem, which might yield to slight differences of
the solution in the last digits and ultimately yields to different
adaptation behavior.

Furthermore, the number of iterations for the solver stays about the
same in all iterations despite hp-adaptation, which ensures that it will
scale properly on even larger problems with a multitude of unknowns.

Let us have a look at the graphical output of the program. After all
refinement cycles in the given parameter configuration, the actual
discretized function space looks like the following with its
partitioning on twelve processes on the left and the polynomial degrees
of finite elements on the right. In the left picture, each color
represents a unique subdomain. In the right picture, the lightest color
corresponds to the polynomial degree two and the darkest one corresponds
to degree six:

<table width="100%">
<tr>
<td>
    <img src="https://www.dealii.org/images/steps/developer/step-75.subdomains-07.svgz"
         alt="Partitioning after seven refinements.">
</td>
<td>
    <img src="https://www.dealii.org/images/steps/developer/step-75.fedegrees-07.svgz"
         alt="Local approximation degrees after seven refinements.">
</td>
</tr>
</table>
